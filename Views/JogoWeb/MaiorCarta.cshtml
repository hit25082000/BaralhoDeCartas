@model BaralhoDeCartas.Models.Interfaces.IBaralho

@{
    ViewData["Title"] = "Jogo de Maior Carta";
}

<div class="jogo-container">
    <h1 class="titulo-jogo">Jogo de Maior Carta</h1>
    
    <div class="info-baralho">
        <p>ID do Baralho: @Model.BaralhoId</p>
        <p>Cartas Restantes: @Model.QuantidadeDeCartasRestantes</p>
        <p>Status: @(Model.EstaEmbaralhado ? "Embaralhado" : "Não Embaralhado")</p>
    </div>

    <div class="acoes-jogo">
        <button class="btn btn-primary btn-lg" onclick="distribuirCartas()">
            Distribuir Cartas
        </button>
    </div>

    <div id="area-jogadores" class="area-jogadores">
        <!-- Os jogadores serão inseridos aqui dinamicamente -->
    </div>
</div>

@section Scripts {
    <script>
        async function distribuirCartas() {
            try {
                const response = await fetch(`/api/MaiorCartaApi/@Model.BaralhoId/distribuir/2`, {
                    method: 'POST'
                });
                const jogadores = await response.json();
                
                const areaJogadores = document.getElementById('area-jogadores');
                areaJogadores.innerHTML = '';
                
                jogadores.forEach(jogador => {
                    const jogadorElement = document.createElement('div');
                    jogadorElement.className = 'jogador-card';
                    jogadorElement.innerHTML = `
                        <h3>${jogador.nome}</h3>
                        <div class="cartas-jogador">
                            ${jogador.cartas.map(carta => `
                                <div class="carta">
                                    <div class="carta-valor">${carta.valorSimbolico}</div>
                                    <div class="carta-naipe">${carta.naipe}</div>
                                </div>
                            `).join('')}
                        </div>
                    `;
                    areaJogadores.appendChild(jogadorElement);
                });

                // Determinar o vencedor
                const vencedorResponse = await fetch('/api/MaiorCartaApi/vencedor', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(jogadores)
                });
                const vencedor = await vencedorResponse.json();

                // Destacar o vencedor
                const jogadorVencedor = document.querySelector(`[data-jogador-id="${vencedor.jogadorId}"]`);
                if (jogadorVencedor) {
                    jogadorVencedor.classList.add('vencedor');
                    jogadorVencedor.querySelector('h3').textContent += ' (Vencedor!)';
                }
            } catch (error) {
                console.error('Erro ao distribuir cartas:', error);
            }
        }
    </script>
} 